Built inheritance graph successfully.
Validating feature main
Let says still valid (1)
decl:Main| expr: MainLet says still valid (2)
Let says still valid (1)
decl:Main| expr: _no_typeLet says still valid (2)
setting expression type to: _no_type
Let says still valid (3)
returning type of object x as Main
setting expression type to: Main
Let says still valid (4)
returning type of object x as SELF_TYPE
setting expression type to: SELF_TYPE
Let says still valid (3)
returning type of object y as Main
setting expression type to: Main
Let says still valid (4)
returning type of object y as SELF_TYPE
setting expression type to: SELF_TYPE
Block says expr # 0 is okay.
Block just validated says: 1
returning type of object y as SELF_TYPE
setting expression type to: SELF_TYPE
1 Feature: main .still_valid = 1
Will now validate return types of: [decl=>Object] vs [expr=>Main]
3 Feature: main .still_valid = 1
Feature main is okay 
Class Main is okay.
#1
_program
  #1
  _class
    Main
    IO
    "temp2.cl"
    (
    #2
    _method
      main
      Object
      #2
      _block
        #3
        _let
          y
          SELF_TYPE
          #4
          _let
            x
            SELF_TYPE
            #0
            _no_expr
            : _no_type
            #4
            _object
              x
            : Main
          : SELF_TYPE
          #5
          _object
            y
          : Main
        : SELF_TYPE
      : SELF_TYPE
    )
